{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","src/utils/mergeAndShift.js"],"sourcesContent":["function $eaac1e5a026fa400$export$1165f2314655db45(cells, reverse = false) {\n    if (reverse) cells.reverse();\n    const filtered = cells.filter((cell)=>cell !== 0);\n    const merged = [];\n    let mergeSum = 0;\n    for(let i = 0; i < filtered.length; i++)if (filtered[i] === filtered[i + 1]) {\n        const newValue = filtered[i] * 2;\n        merged.push(newValue);\n        mergeSum += newValue;\n        i++;\n    } else merged.push(filtered[i]);\n    while(merged.length < cells.length)merged.push(0);\n    if (reverse) merged.reverse();\n    return {\n        merged: merged,\n        mergeSum: mergeSum\n    };\n}\n\n\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static STATUS = {\n        waiting: \"waiting\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.score = 0;\n        this.status = $a5fd07fa01589658$var$Game.STATUS.waiting;\n        this.initialState = initialState;\n        this.state = initialState.map((row)=>[\n                ...row\n            ]);\n    }\n    move(direction) {\n        if (this.status !== $a5fd07fa01589658$var$Game.STATUS.playing) return;\n        const previousState = this.state.map((row)=>[\n                ...row\n            ]);\n        let hasMoved = false;\n        let totalMergeSum = 0;\n        let newState = [];\n        if (direction === \"left\" || direction === \"right\") newState = this.state.map((row)=>{\n            const reversed = direction === \"right\" ? row.reverse() : row;\n            const { merged: merged, mergeSum: mergeSum } = (0, $eaac1e5a026fa400$export$1165f2314655db45)(reversed);\n            totalMergeSum += mergeSum;\n            if (!hasMoved && !merged.every((val, i)=>val === row[i])) hasMoved = true;\n            return direction === \"right\" ? merged.reverse() : merged;\n        });\n        else {\n            const transposed = this.transpose(this.state);\n            newState = transposed.map((col)=>{\n                const reversed = direction === \"down\" ? col.reverse() : col;\n                const { merged: merged, mergeSum: mergeSum } = (0, $eaac1e5a026fa400$export$1165f2314655db45)(reversed);\n                totalMergeSum += mergeSum;\n                if (!hasMoved && !merged.every((val, i)=>val === col[i])) hasMoved = true;\n                return direction === \"down\" ? merged.reverse() : merged;\n            });\n            newState = this.transpose(newState);\n        }\n        if (hasMoved) {\n            this.state = newState;\n            this.score += totalMergeSum;\n            this.addNumbers();\n            this.setState();\n            this.checkStatus();\n        } else this.state = previousState;\n        return hasMoved;\n    }\n    moveLeft() {\n        return this.move(\"left\");\n    }\n    moveRight() {\n        return this.move(\"right\");\n    }\n    moveUp() {\n        return this.move(\"up\");\n    }\n    moveDown() {\n        return this.move(\"down\");\n    }\n    transpose(matrix) {\n        return matrix[0].map((_, i)=>matrix.map((row)=>row[i]));\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    /**\n   * Starts the game.\n   */ start() {\n        this.status = $a5fd07fa01589658$var$Game.STATUS.playing;\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n        this.addNumbers();\n        this.addNumbers();\n        this.setState();\n    }\n    /**\n   * Resets the game.\n   */ restart() {\n        this.score = 0;\n        this.status = $a5fd07fa01589658$var$Game.STATUS.waiting;\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n        this.setState();\n    }\n    addNumbers() {\n        const emptyCells = this.state.flatMap((row, r)=>row.map((cell, c)=>cell === 0 ? {\n                    r: r,\n                    c: c\n                } : null)).filter(Boolean);\n        if (emptyCells.length) {\n            const { r: r, c: c } = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n            this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    setState() {\n        document.querySelectorAll(\".field-cell\").forEach((cell, i)=>{\n            const value = this.state.flat()[i];\n            cell.className = \"field-cell\";\n            cell.textContent = value || \"\";\n            if (value) cell.classList.add(`field-cell--${value}`);\n        });\n    }\n    checkStatus() {\n        if (this.state.some((row)=>row.includes(2048))) {\n            this.status = $a5fd07fa01589658$var$Game.STATUS.win;\n            return;\n        }\n        if (this.state.some((row)=>row.includes(0))) return;\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 3; j++){\n            if (this.state[i][j] === this.state[i][j + 1] || this.state[j][i] === this.state[j + 1][i]) return;\n        }\n        this.status = $a5fd07fa01589658$var$Game.STATUS.lose;\n    }\n}\nvar $a5fd07fa01589658$export$2e2bcd8739ae039 = $a5fd07fa01589658$var$Game;\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$game = new (0, $a5fd07fa01589658$export$2e2bcd8739ae039)();\nconst $09e991522ca7e64e$var$buttonStartGame = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$showStartMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$totalScore = document.querySelector(\".game-score\");\nfunction $09e991522ca7e64e$var$updateScore() {\n    $09e991522ca7e64e$var$totalScore.textContent = $09e991522ca7e64e$var$game.score;\n}\n$09e991522ca7e64e$var$buttonStartGame.addEventListener(\"click\", $09e991522ca7e64e$var$startGame);\nfunction $09e991522ca7e64e$var$startGame() {\n    $09e991522ca7e64e$var$buttonStartGame.classList.toggle(\"restart\");\n    $09e991522ca7e64e$var$buttonStartGame.classList.toggle(\"start\");\n    $09e991522ca7e64e$var$showStartMessage.classList.toggle(\"hidden\");\n    $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$totalScore.textContent = 0;\n    if ($09e991522ca7e64e$var$buttonStartGame.className.includes(\"start\")) {\n        $09e991522ca7e64e$var$buttonStartGame.textContent = \"Start\";\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$buttonStartGame.classList.remove(\"button--highlight\");\n    }\n    if ($09e991522ca7e64e$var$buttonStartGame.className.includes(\"restart\")) {\n        $09e991522ca7e64e$var$buttonStartGame.textContent = \"Restart\";\n        $09e991522ca7e64e$var$game.start();\n    }\n    document.addEventListener(\"keydown\", $09e991522ca7e64e$var$arrowMove);\n}\nconst $09e991522ca7e64e$var$deleteMove = ()=>document.removeEventListener(\"keydown\", $09e991522ca7e64e$var$arrowMove);\nfunction $09e991522ca7e64e$var$arrowMove(action) {\n    if ($09e991522ca7e64e$var$game.getStatus() === (0, $a5fd07fa01589658$export$2e2bcd8739ae039).STATUS.playing) {\n        let hasMoved = false;\n        switch(action.key){\n            case \"ArrowLeft\":\n                hasMoved = $09e991522ca7e64e$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                hasMoved = $09e991522ca7e64e$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                hasMoved = $09e991522ca7e64e$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                hasMoved = $09e991522ca7e64e$var$game.moveDown();\n                break;\n            default:\n                break;\n        }\n        if (hasMoved) $09e991522ca7e64e$var$updateScore();\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === (0, $a5fd07fa01589658$export$2e2bcd8739ae039).STATUS.lose) {\n        $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$buttonStartGame.classList.add(\"button--highlight\");\n        $09e991522ca7e64e$var$deleteMove();\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === (0, $a5fd07fa01589658$export$2e2bcd8739ae039).STATUS.win) {\n        $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$deleteMove();\n    }\n    action.preventDefault();\n}\ndocument.addEventListener(\"keydown\", $09e991522ca7e64e$var$arrowMove);\n\n\n//# sourceMappingURL=index.968339ca.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\nconst buttonStartGame = document.querySelector('.button');\nconst showStartMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst totalScore = document.querySelector('.game-score');\n\nfunction updateScore() {\n  totalScore.textContent = game.score;\n}\n\nbuttonStartGame.addEventListener('click', startGame);\n\nfunction startGame() {\n  buttonStartGame.classList.toggle('restart');\n  buttonStartGame.classList.toggle('start');\n  showStartMessage.classList.toggle('hidden');\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  totalScore.textContent = 0;\n\n  if (buttonStartGame.className.includes('start')) {\n    buttonStartGame.textContent = 'Start';\n\n    game.restart();\n    buttonStartGame.classList.remove('button--highlight');\n  }\n\n  if (buttonStartGame.className.includes('restart')) {\n    buttonStartGame.textContent = 'Restart';\n\n    game.start();\n  }\n\n  document.addEventListener('keydown', arrowMove);\n}\n\nconst deleteMove = () => document.removeEventListener('keydown', arrowMove);\n\nfunction arrowMove(action) {\n  if (game.getStatus() === Game.STATUS.playing) {\n    let hasMoved = false;\n\n    switch (action.key) {\n      case 'ArrowLeft':\n        hasMoved = game.moveLeft();\n        break;\n      case 'ArrowRight':\n        hasMoved = game.moveRight();\n        break;\n      case 'ArrowUp':\n        hasMoved = game.moveUp();\n        break;\n      case 'ArrowDown':\n        hasMoved = game.moveDown();\n        break;\n      default:\n        break;\n    }\n\n    if (hasMoved) {\n      updateScore();\n    }\n  }\n\n if (game.getStatus() === Game.STATUS.lose) {\n  loseMessage.classList.remove('hidden');\n  buttonStartGame.classList.add('button--highlight');\n  deleteMove();\n}\n\n  if (game.getStatus() === Game.STATUS.win) {\n    winMessage.classList.remove('hidden');\n\n    deleteMove();\n  }\n\n  action.preventDefault();\n}\n\ndocument.addEventListener('keydown', arrowMove);","'use strict';\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nimport { mergeAndShift } from '../utils/mergeAndShift.js';\n\nclass Game {\n  static STATUS = {\n    waiting: 'waiting',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = Game.STATUS.waiting;\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  move(direction) {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    const previousState = this.state.map((row) => [...row]);\n    let hasMoved = false;\n    let totalMergeSum = 0;\n    let newState = [];\n\n    if (direction === 'left' || direction === 'right') {\n      newState = this.state.map((row) => {\n        const reversed = direction === 'right' ? row.reverse() : row;\n        const { merged, mergeSum } = mergeAndShift(reversed);\n\n        totalMergeSum += mergeSum;\n\n        if (!hasMoved && !merged.every((val, i) => val === row[i])) {\n          hasMoved = true;\n        }\n\n        return direction === 'right' ? merged.reverse() : merged;\n      });\n    } else {\n      const transposed = this.transpose(this.state);\n\n      newState = transposed.map((col) => {\n        const reversed = direction === 'down' ? col.reverse() : col;\n        const { merged, mergeSum } = mergeAndShift(reversed);\n\n        totalMergeSum += mergeSum;\n\n        if (!hasMoved && !merged.every((val, i) => val === col[i])) {\n          hasMoved = true;\n        }\n\n        return direction === 'down' ? merged.reverse() : merged;\n      });\n      newState = this.transpose(newState);\n    }\n\n    if (hasMoved) {\n      this.state = newState;\n      this.score += totalMergeSum;\n      this.addNumbers();\n      this.setState();\n      this.checkStatus();\n    } else {\n      this.state = previousState;\n    }\n\n    return hasMoved;\n  }\n\n  moveLeft() {\n    return this.move('left');\n  }\n  moveRight() {\n    return this.move('right');\n  }\n  moveUp() {\n    return this.move('up');\n  }\n  moveDown() {\n    return this.move('down');\n  }\n\n  transpose(matrix) {\n    return matrix[0].map((_, i) => matrix.map((row) => row[i]));\n  }\n\n  getScore() {\n    return this.score;\n  }\n  getState() {\n    return this.state;\n  }\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = Game.STATUS.playing;\n    this.state = this.initialState.map((row) => [...row]);\n    this.addNumbers();\n    this.addNumbers();\n    this.setState();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.score = 0;\n    this.status = Game.STATUS.waiting;\n    this.state = this.initialState.map((row) => [...row]);\n    this.setState();\n  }\n\n  addNumbers() {\n    const emptyCells = this.state\n      .flatMap((row, r) => row.map((cell, c) => (cell === 0 ? { r, c } : null)))\n      .filter(Boolean);\n\n    if (emptyCells.length) {\n      const { r, c } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  setState() {\n    document.querySelectorAll('.field-cell').forEach((cell, i) => {\n      const value = this.state.flat()[i];\n\n      cell.className = 'field-cell';\n      cell.textContent = value || '';\n\n      if (value) {\n        cell.classList.add(`field-cell--${value}`);\n      }\n    });\n  }\n\n  checkStatus() {\n    if (this.state.some((row) => row.includes(2048))) {\n      this.status = Game.STATUS.win;\n\n      return;\n    }\n\n    if (this.state.some((row) => row.includes(0))) {\n      return;\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (\n          this.state[i][j] === this.state[i][j + 1] ||\n          this.state[j][i] === this.state[j + 1][i]\n        ) {\n          return;\n        }\n      }\n    }\n    this.status = Game.STATUS.lose;\n  }\n}\n\nexport default Game;","export function mergeAndShift(cells, reverse = false) {\r\n  if (reverse) {\r\n    cells.reverse();\r\n  }\r\n\r\n  const filtered = cells.filter((cell) => cell !== 0);\r\n  const merged = [];\r\n  let mergeSum = 0;\r\n\r\n  for (let i = 0; i < filtered.length; i++) {\r\n    if (filtered[i] === filtered[i + 1]) {\r\n      const newValue = filtered[i] * 2;\r\n\r\n      merged.push(newValue);\r\n      mergeSum += newValue;\r\n      i++;\r\n    } else {\r\n      merged.push(filtered[i]);\r\n    }\r\n  }\r\n\r\n  while (merged.length < cells.length) {\r\n    merged.push(0);\r\n  }\r\n\r\n  if (reverse) {\r\n    merged.reverse();\r\n  }\r\n\r\n  return { merged, mergeSum };\r\n}"],"names":["$eaac1e5a026fa400$export$1165f2314655db45","cells","reverse","filtered","filter","cell","merged","mergeSum","i","length","newValue","push","$a5fd07fa01589658$var$Game","STATUS","waiting","playing","win","lose","constructor","initialState","score","status","state","map","row","move","direction","previousState","hasMoved","totalMergeSum","newState","every","val","transposed","transpose","col","addNumbers","setState","checkStatus","moveLeft","moveRight","moveUp","moveDown","matrix","_","getScore","getState","getStatus","start","restart","emptyCells","flatMap","r","c","Boolean","Math","floor","random","document","querySelectorAll","forEach","value","flat","className","textContent","classList","add","some","includes","j","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$buttonStartGame","querySelector","$09e991522ca7e64e$var$showStartMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$totalScore","addEventListener","toggle","remove","$09e991522ca7e64e$var$arrowMove","$09e991522ca7e64e$var$deleteMove","removeEventListener","action","key","preventDefault"],"version":3,"file":"index.968339ca.js.map"}